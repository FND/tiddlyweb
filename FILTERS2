
Notes on how to do the new style of filters.

See the google groups thread for background:

    http://groups.google.com/group/TiddlyWikiDev/browse_frm/thread/893e0093ed0d6278

The new syntax being considered separates the existing filter
functionality into three distinct areas of concern:

* selecting: picking some tiddlers out of a larger collection
* sorting: ordering a list of tiddlers
* limiting/counting: curtailing a list of tiddlers to fewer

Possible syntaxes:

Limit:

 Example: Get the first (up to) ten records:

   limit=1,10
   limit=10
 
 In the first form the first argument is an offset,
 and the second argument is a count. In the second form
 we have just a count. This is similar to behavior in some
 SQL implementations, and allows paging.

Sort:

 Syntax: sort=[-]<key>

  key: defines the item on which to sort
    -: optional argument to reverse the sort

  The expectation here is that the sort will determine
  whether it should be doing a lexical or numeric sort.
  User defined sorts can define 

 Example: Sort by the modified time:
 
   sort=-modified 

Select:

 Syntax: select=<key>:[!|<|>]<value>

    key: defines the attribute (or aspect) of the tiddlers on which to select
  value: the value that has to match (this should probably be a pattern)
      !: optional negator: get what doesn't match

 Example: Get all the tiddlers tagged both systemConfig and blog
 
   select=tag:systemConfig;select=tag:blog

When there are multiple selects in one "filter" the selects are an ordered
intersection: We get all the tiddlers which are 'systemConfig' and then from that
result set we get all those tiddlers which are 'blog'.

The same is true of sorts and limits: they are used in order on the tiddlers
resulting from the previous command. This is accomplished in code by creating
a nested set of functions.

To create unions of tiddlers two or more filters must be used.
