This document describes changes between version 1.0.x and what will be
called version 1.2.x of TiddlyWeb. The 1.2.x release will be the result
of experimental development through versions 1.1.x.

The focus of the 1.1.x work was to make architectural changes in
TiddlyWeb for the sake of performance and flexibility. These changes
were driven by shortcomings discovered through real world use of 1.0.x
(and prior).

That real world use revealed that in any regular request to the server
there are too many loops. As the number of entities involved increases,
the cost of those loops gets higher and higher.

One of the largest changes is removing tiddlers from within bags. Now
when a bag is loaded, no tiddlers are loaded, just the bag description
and its policy. The tiddlers in the bag must be loaded separately.
Code that used to look like this:

    bag = Bag('foo')
    bag = store.get(bag)
    bag.policy.allows('read', usersign)
    tiddlers = bag.gen_tiddlers()
    for tiddler in tiddlers:
        tiddler = store.get(tiddler)

now is like this:

    bag = Bag('foo')
    bag = store.get(bag)
    bag.policy.allows('read', usersign)
    tiddlers = store.list_bag_tiddlers(bag)

That tiddlers object is an iterator, usually a generator, but that
depends on the store.

The other major change is that the tiddlers that are returned have
not been loaded from the store. This is the job of the calling code.
Surprisingly, this change saves a great deal of memory and makes
operations much faster, especially when a caching system like 
memcached is used.

Where possible lists have been turned into generators.

! Filtering bags and recipes

/bags and /recipes now accept filter strings, such
as /bags?select=name:>foobar;limit=2

! Collections

A Collections class has been created which is designed to
make it more efficient to calculate ETag and last-modified
data for collections of bags, recipes or tiddlers. See
tiddlweb.model.collections

! Miscellaneous

* control._recipe_template is now control.recipe_template,
  to facillitate checking a recipe for permission issues
  _before_ loading up all the tiddlers.

! HTTP API

* DELETE to /recipes/<recipe name>/tiddlers/<tiddler name> no
  longer possible. Will return a 405 on try.
